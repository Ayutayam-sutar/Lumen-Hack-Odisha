import React, { createContext, useState, useContext } from 'react';
import { ToastContext } from './ToastContext';

/**
 * @typedef {Object} GamificationContextType
 * @property {(amount: number) => void} addXp
 */

export const GamificationContext = createContext({
Â  addXp: () => {},
});

export const GamificationProvider = ({ children }) => {
Â  const [xp, setXp] = useState(450); // From mockUser
Â  const [level, setLevel] = useState(7); // From mockUser
Â  const xpToNextLevel = 1000; // From mockUser
Â  
Â  const toastContext = useContext(ToastContext);

Â  const addXp = (amount) => {
Â  Â  let newXp = xp + amount;
Â  Â  let newLevel = level;

Â  Â  if (newXp >= xpToNextLevel) {
Â  Â  Â  newLevel += 1;
Â  Â  Â  newXp -= xpToNextLevel;
Â  Â  Â  // In a real app, the next xpToNextLevel would likely increase.
Â  Â  Â  toastContext.addToast(`ðŸŽ‰ Level Up! You've reached Level ${newLevel}!`);
Â  Â  } else {
Â  Â  Â  Â  toastContext.addToast(`ðŸŽ‰ +${amount} XP Earned!`);
Â  Â  }
Â  Â  
Â  Â  setXp(newXp);
Â  Â  setLevel(newLevel);
Â  };
Â  
Â  return (
Â  Â  <GamificationContext.Provider value={{ addXp }}>
Â  Â  Â  {children}
Â  Â  </GamificationContext.Provider>
Â  );
};
